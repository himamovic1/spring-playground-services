version: '3.7'

networks:
  lucynet:


volumes:
  setup:
    driver: local
  elasticsearch:
    driver: local

services:

  # Config Server
  lucyconfigserver:
    build:
      context: config-server/
      args:
        CONFIG_USER: ${CONFIG_USER:-}
        CONFIG_PASS: ${CONFIG_PASS:-}
        CONFIG_GIT_REPO: ${CONFIG_GIT_REPO:-}
    environment:
      SPRING_SECURITY_USER_NAME: ${CONFIG_USER:-}
      SPRING_SECURITY_USER_PASSWORD: ${CONFIG_PASS:-}
      SPRING_CLOUD_CONFIG_SERVER_GIT_URI: ${CONFIG_GIT_REPO:-}
    ports:
      - 8888:8888
    networks:
      - lucynet

  # Eureka server
  lucyserviceregistry:
    build:
      context: service-registry/
    ports:
      - 8761:8761
    networks:
      - lucynet

  # lucy-core
  lucycore:
    build:
      context: core/
    restart: on-failure
    depends_on:
      - lucyconfigserver
      - lucyserviceregistry
      - logstash
    environment:
      EUREKA_URI: ${EUREKA_URI:-}
      LOGSTASH_URI: ${LOGSTASH_URI:-}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-}
      SPRING_CLOUD_CONFIG_ENABLED: 'true'
      SPRING_CONFIG_IMPORT: configserver:http://lucyconfigserver:8888
      SPRING_CLOUD_CONFIG_USERNAME: ${CONFIG_USER:-}
      SPRING_CLOUD_CONFIG_PASSWORD: ${CONFIG_PASS:-}
    ports:
      - 8080:8080
    networks:
      - lucynet

  # This task is only performed during the *initial* startup of the stack. On all
  # subsequent runs, the service simply returns immediately, without performing
  # any modification to existing users.
  elksetup:
    build:
      context: elk/setup/
      args:
        STACK_VERSION: ${STACK_VERSION}
    init: true
    volumes:
      - setup:/state:Z
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      - lucynet
    depends_on:
      - elasticsearch

  elasticsearch:
    build:
      context: elk/elasticsearch/
      args:
        STACK_VERSION: ${STACK_VERSION}
    volumes:
      - ./elk/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
      - elasticsearch:/usr/share/elasticsearch/data:z
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      CLUSTER_NAME: ${CLUSTER_NAME}
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      # Bootstrap password.
      # Used to initialize the keystore during the initial startup of
      # Elasticsearch. Ignored on subsequent runs.
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - lucynet

  logstash:
    build:
      context: elk/logstash/
      args:
        STACK_VERSION: ${STACK_VERSION}
    volumes:
      - ./elk/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./elk/logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
    ports:
      - "5044:5044"
      - "50000:50000/tcp"
      - "50000:50000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
    networks:
      - lucynet
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: elk/kibana/
      args:
        STACK_VERSION: ${STACK_VERSION}
    volumes:
      - ./elk/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - "5601:5601"
    environment:
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      - lucynet
    depends_on:
      - elasticsearch
